{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","listOfNavigation","className","classNames","disabled","href","onClick","map","link","active","items","App","useState","itemsPerPage","setItemsPerPage","activePage","setActivePage","maxPage","visiblePages","el","filter","_","i","id","value","onChange","event","Number","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAAa,SAACC,GACzB,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAmBf,EAAW,EAAGY,GAEvC,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UACFC,IAAW,YAAa,CAAEC,SAA0B,IAAhBR,IADtC,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACa,IAAhBV,GACFC,EAAaD,EAAc,IAPjC,oBAcDK,EAAiBM,KAAI,SAAAC,GAAI,OACxB,oBAAIN,UAAWC,IAAW,YAAa,CACrCM,OAAQD,IAASZ,IADnB,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACHE,IAASZ,GACXC,EAAaW,IANnB,SAUGA,SAKP,oBACEN,UACEC,IAAW,YAAa,CAAEC,SAAUR,IAAgBE,IAFxD,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,WACHV,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,wBC7DFc,EAAQxB,EAAW,EAFR,IAGdqB,KAAI,SAAAjB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,GAAWF,EAAa,GAAKF,EAAeA,EATnC,OAWVE,EAAa,GAAKF,EAAeA,EAEhCK,EAAeR,EAClBH,KAAI,SAAAY,GAAE,OACL,oBAAI,UAAQ,OAAZ,SAAoBA,OAErBC,QAAO,SAACC,EAAGC,GAAJ,OACNA,IAAMP,EAAa,GAAKF,GACrBS,GAAKP,EAAa,GAAKF,EAAeA,KAE7C,OACE,sBAAKX,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWa,EADX,oBACiCA,EAAa,GAAKF,EAAe,EADlE,cACyEI,EADzE,eAzBW,GAyBX,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOX,EACPY,SAAU,SAACC,GACTZ,EAAgBa,OAAOD,EAAME,OAAOJ,QACpCR,EAAc,IAPlB,UAUE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAtDS,GAuDTC,QAASkB,EACTjB,YAAamB,EACblB,aAAc,SAACiC,GACbd,EAAcc,MAGlB,6BACGZ,QChETa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c49c0656.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: Callback;\n};\n\ntype Callback = (page: number) => void;\n\nexport const Pagination = (props: Props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const totalPages = Math.ceil(total / perPage);\n  const listOfNavigation = getNumbers(1, totalPages);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={\n        classNames('page-item', { disabled: currentPage === 1 })\n      }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {listOfNavigation.map(link => (\n        <li className={classNames('page-item', {\n          active: link === currentPage,\n        })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${link}`}\n            onClick={() => {\n              if (link !== currentPage) {\n                onPageChange(link);\n              }\n            }}\n          >\n            {link}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={\n          classNames('page-item', { disabled: currentPage === totalPages })\n        }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={() => {\n            if (currentPage !== totalPages) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst maxItems = 42;\n\nconst items = getNumbers(1, maxItems)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [activePage, setActivePage] = useState(1);\n\n  const maxPage = (activePage - 1) * itemsPerPage + itemsPerPage > maxItems\n    ? maxItems\n    : (activePage - 1) * itemsPerPage + itemsPerPage;\n\n  const visiblePages = items\n    .map(el => (\n      <li data-cy=\"item\">{el}</li>\n    ))\n    .filter((_, i) => (\n      i >= (activePage - 1) * itemsPerPage\n      && i < (activePage - 1) * itemsPerPage + itemsPerPage));\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${activePage} (items ${(activePage - 1) * itemsPerPage + 1} - ${maxPage} of ${maxItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(Number(event.target.value));\n              setActivePage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={maxItems}\n        perPage={itemsPerPage}\n        currentPage={activePage}\n        onPageChange={(page) => {\n          setActivePage(page);\n        }}\n      />\n      <ul>\n        {visiblePages}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}